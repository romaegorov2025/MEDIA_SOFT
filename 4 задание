# Задание 4

Функция редактирования заказа является одной из ключевых возможностей приложения "Частная пекарня", позволяющая пользователю легко изменять информацию о своем заказе после его создания. Данная функция включает в себя возможность изменения количества товаров, добавления новых позиций в заказ, удаления товаров из заказа и обновления информации о доставке.

Основные требования к функции редактирования заказа
Доступ к функции редактирования заказа: Пользователь должен иметь возможность выбирать существующий заказ, чтобы редактировать его.
Изменение содержимого заказа: Пользователь может:
Увеличить или уменьшить количество выбранных товаров.
Добавить новые товары из каталога.
Удалить ненужные товары из заказа.
Обновление информации о доставке: Пользователь может изменять адрес доставки и способ оплаты.
Подтверждение изменений: Все изменения должны подтверждаться пользователем перед окончательной обработкой.
Синхронизация с сервером: Изменения необходимо синхронизировать с сервером, чтобы база данных оставалась актуальной.
UML-диаграмма
К сожалению, я не могу нарисовать диаграмму, но могу описать, как она должна выглядеть. Для функции редактирования заказа следует построить диаграмму последовательностей (Sequence Diagram), которая включает следующие участники:

Пользователь (User): инициатор редактирования.
Клиентское приложение (Mobile App): обрабатывающее интерфейс и бизнес-логику.
Серверная часть (Server): выполняющее команды, хранящее и обрабатывающее данные.
Изображение должно показывать последовательность действий:

Пользователь выбирает заказ на экране.
Клиент отправляет запрос на сервер для получения информации о заказе.
Сервер отвечает с детальными данными заказа.
Пользователь вносит изменения.
Клиент отправляет обновленный заказ на сервер.
Сервер обрабатывает данные и обновляет запись в базе данных.
Сервер отправляет ответ о статусе обновления (успех или ошибка).
Используемые API методы
Для реализации функции редактирования заказа предполагается использовать следующие API-методы:

Получение заказа
Метод: GET /orders/{order_id}
Описание: Получение данных о существующем заказе.
Параметры запроса:
order_id (идентификатор заказа).
Ответ:
Объект заказа с полями (например, order_items, total_price, delivery_info, status).
Обновление заказа
Метод: PUT /orders/{order_id}
Описание: Обновление информации о заказе.
Параметры запроса:
order_id (идентификатор заказа).
order_items (новый список товаров с количеством).
total_price (новая общая сумма).
delivery_info (новая информация о доставке).
Ответ:
Статус выполнения операции (например, success или error с описанием ошибки).
Процесс хранения информации о покупках пользователя
Информация о покупках пользователя должна храниться в реляционной базе данных с использованием таблицы "orders" для хранения заказов. Каждый заказ связан с пользователем и включает:

order_id: уникальный идентификатор заказа.
customer_id: идентификатор клиента, который размещает заказ.
order_items: JSON-объект, содержащий массив с товарами, где каждый объект включает item_id, quantity, price.
total_price: итоговая сумма заказа.
status: статус заказа (например, "новый", "в обработке", "завершен", "отменен").
delivery_info: информация о доставке, включая адрес и курьера.
При редактировании заказа соответствующая запись в базе данных обновляется с учетом внесенных изменений, что позволяет сохранить актуальность информации. Кроме того, следует предусмотреть возможность ведения истории изменений заказа (например, через отдельную таблицу "order_history"), что поможет в аналитике и отслеживании истории взаимодействия пользователя с приложением.

В результате, функция редактирования заказа обеспечивает пользователю удобство в управлении своими покупками и поддерживает актуальность информации на сервере, что является важным для функциональности приложения "Частная пекарня".
